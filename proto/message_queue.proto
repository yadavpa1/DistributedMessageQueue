syntax = "proto3";

package message_queue;

service message_queue {
    rpc ProduceMessage(ProduceMessageRequest) returns (ProduceMessageResponse);
    rpc ConsumeMessage(ConsumeMessageRequest) returns (ConsumeMessageResponse);    
}

message Message {
    string key = 1;          // Message key for partitioning
    string value = 2;        // Message payload
    string topic = 3;        // Topic name
    // int32 partition = 4;     // Partition ID
    // int64 offset = 5;        // Offset within the partition
    int64 timestamp = 4;     // Message creation timestamp
    optional int64 size = 5; // Size of the message;
}

message ProduceMessageRequest {
    Message message = 1;     // Message details
    string producer_id = 2;  // ID of the producer
    string ack_mode = 3;     // Acknowledgment mode (e.g., "all", "1", "0")
}

message ProduceMessageResponse {
    bool success = 1;         // Whether the operation was successful
    string error_message = 2; // Error message if applicable
}

message ConsumeMessageRequest {
    string topic = 1;         // Topic to consume from
    // int32 partition = 2;      // Partition ID
    // int64 start_offset = 1;   // Offset to start consuming from
    // int32 max_messages = 2;   // Maximum number of messages to fetch
}

message ConsumeMessageResponse {
    repeated Message messages = 1;  // List of messages
    bool success = 2;               // Whether the operation was successful
    string error_message = 3;       // Error message if applicable
}