syntax = "proto3";

option java_package = "com.clustercrew.messagequeue";

package message_queue;

service MessageQueue {
    rpc ProduceMessages(ProduceMessagesRequest) returns (ProduceMessagesResponse);
    rpc ConsumeMessages(ConsumeMessagesRequest) returns (ConsumeMessagesResponse);    
    rpc GetMetadata(MetadataRequest) returns (MetadataResponse);
}

message Message {
    string key = 1;          // Message key for partitioning
    string value = 2;        // Message payload
    string topic = 3;        // Topic name
    int32 partition = 4;     // Partition ID
    int64 offset = 5;        // Offset within the partition
    int64 timestamp = 6;     // Message creation timestamp
    optional int64 size = 7; // Size of the message
}

message ProduceMessagesRequest {
    repeated Message messages = 1;     // Batch of Messages
    string producer_id = 2;           // ID of the producer
}

message ProduceMessagesResponse {
    bool success = 1;         // Whether the operation was successful
    string error_message = 2; // Error message if applicable
}

message ConsumeMessagesRequest {
    string group_id = 1;      // Consumer group ID
    string topic = 2;         // Topic to consume from
    int32 partition = 3;      // Partition ID
    int64 start_offset = 4;   // Offset to start consuming from
    int32 max_messages = 5;   // Maximum number of messages to fetch
}

message ConsumeMessagesResponse {
    repeated Message messages = 1;  // List of messages
    bool success = 2;               // Whether the operation was successful
    string error_message = 3;       // Error message if applicable
}

message MetadataRequest {
    string topic = 1;
}

message MetadataResponse {
    repeated PartitionMetadata partitions = 1; // Metadata for partitions
    bool success = 2;                          // Indicates success of the operation
    string error_message = 3;                  // Error message if applicable
}

message PartitionMetadata {
    int32 partition_id = 1;
    string broker_address = 2;
}
